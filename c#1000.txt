C Sharp (programming language)
From Wikipedia, the free encyclopedia
Jump to navigationJump to search
The correct title of this article is C# (programming language). The substitution of the # is due to technical restrictions.
C#
C Sharp wordmark.svg
Paradigm        Multi-paradigm: structured, imperative, object-oriented, event-driven, task-driven, functional, generic, reflective, concurrent
Family        C
Designed by        Anders Hejlsberg (Microsoft)
Developer        Mads Torgersen (Microsoft)
First appeared        2000; 21 years ago[1]
Stable release        
9.0[2] / November 10, 2020; 11 months ago
Typing discipline        Static, dynamic,[3] strong, safe, nominative, partially inferred
Platform        Common Language Infrastructure
License        
Roslyn compiler: MIT/X11[4]
.NET Core CLR: MIT/X11[5]
Mono compiler: dual GPLv3 and MIT/X11
DotGNU: dual GPL and LGPL
Filename extensions        .cs, .csx
Website        docs.microsoft.com/en-us/dotnet/csharp/
Major implementations
Visual C#, .NET, .NET Framework (discontinued), Mono, DotGNU (discontinued), Universal Windows Platform
Dialects
Cω, Polyphonic C#, Enhanced C#
Influenced by
C++,[6] Cω, Eiffel, F#,[a] Haskell, Icon, J#, J++, Java,[6] ML, Modula-3, Object Pascal,[7] VB
Influenced
Chapel,[8] Clojure,[9] Crystal,[10] D, J#, Dart,[11] F#, Hack, Java,[12][13] Kotlin, Nemerle, Oxygene, Rust, Swift,[14] Vala, TypeScript
 C Sharp Programming at Wikibooks
C# (/si ʃɑːrp/ see sharp)[b] is a general-purpose, multi-paradigm programming language. C# encompasses static typing, strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented (class-based), and component-oriented programming disciplines.[15]


C# was designed by Anders Hejlsberg from Microsoft in 2000 and was later approved as an international standard by Ecma (ECMA-334) in 2002 and ISO (ISO/IEC 23270) in 2003. Microsoft introduced C# along with .NET Framework and Visual Studio, both of which were closed-source. At the time, Microsoft had no open-source products. Four years later, in 2004, a free and open-source project called Mono began, providing a cross-platform compiler and runtime environment for the C# programming language. A decade later, Microsoft released Visual Studio Code (code editor), Roslyn (compiler), and the unified .NET platform (software framework), all of which support C# and are free, open-source, and cross-platform. Mono also joined Microsoft but was not merged into .NET.


As of 2021, the most recent version of the language is C# 9.0, which was released in 2020 in .NET 5.0.[16][17]




Contents
1        Design goals
2        History
2.1        Name
2.2        Versions
3        Syntax
4        Distinguishing features
4.1        Portability
4.2        Typing
4.3        Metaprogramming
4.4        Methods and functions
4.5        Property
4.6        Namespace
4.7        Memory access
4.8        Exception
4.9        Polymorphism
4.10        Language Integrated Query (LINQ)
4.11        Functional programming
5        Common type system
5.1        Categories of data types
5.2        Boxing and unboxing
6        Libraries
7        Examples
7.1        Hello World
7.2        GUI
7.3        Images
8        Standardization and licensing
9        Implementations
10        See also
11        Notes
12        References
13        Further reading
14        External links
Design goals
The Ecma standard lists these design goals for C#:[15]


The language is intended to be a simple, modern, general-purpose, object-oriented programming language.
The language, and implementations thereof, should provide support for software engineering principles such as strong type checking, array bounds checking, detection of attempts to use uninitialized variables, and automatic garbage collection. Software robustness, durability, and programmer productivity are important.
The language is intended for use in developing software components suitable for deployment in distributed environments.
Portability is very important for source code and programmers, especially those already familiar with C and C++.
Support for internationalization is very important.
C# is intended to be suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.
Although C# applications are intended to be economical with regard to memory and processing power requirements, the language was not intended to compete directly on performance and size with C or assembly language.[18]
History
During the development of the .NET Framework, the class libraries were originally written using a managed code compiler system called "Simple Managed C" (SMC).[19][20] In January 1999, Anders Hejlsberg formed a team to build a new language at the time called Cool, which stood for "C-like Object Oriented Language".[21] Microsoft had considered keeping the name "Cool" as the final name of the language, but chose not to do so for trademark reasons. By the time the .NET project was publicly announced at the July 2000 Professional Developers Conference, the language had been renamed C#, and the class libraries and ASP.NET runtime had been ported to C#.


Hejlsberg is C#'s principal designer and lead architect at Microsoft, and was previously involved with the design of Turbo Pascal, Embarcadero Delphi (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi), and Visual J++. In interviews and technical papers he has stated that flaws[22] in most major programming languages (e.g. C++, Java, Delphi, and Smalltalk) drove the fundamentals of the Common Language Runtime (CLR), which, in turn, drove the design of the C# language itself.


James Gosling, who created the Java programming language in 1994, and Bill Joy, a co-founder of Sun Microsystems, the originator of Java, called C# an "imitation" of Java; Gosling further said that "[C# is] sort of Java with reliability, productivity and security deleted."[23][24] Klaus Kreft and Angelika Langer (authors of a C++ streams book) stated in a blog post that "Java and C# are almost identical programming languages. Boring repetition that lacks innovation,"[25] "Hardly anybody will claim that Java or C# are revolutionary programming languages that changed the way we write programs," and "C# borrowed a lot from Java - and vice versa. Now that C# supports boxing and unboxing, we'll have a very similar feature in Java."[26] In July 2000, Hejlsberg said that C# is "not a Java clone" and is "much closer to C++" in its design.[27]


Since the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories, becoming two quite different languages. One of the first major departures came with the addition of generics to both languages, with vastly different implementations. C# makes use of reification to provide "first-class" generic objects that can be used like any